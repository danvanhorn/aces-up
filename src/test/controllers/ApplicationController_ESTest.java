/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 02 21:31:54 GMT 2017
 */

package controllers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import controllers.ApplicationController;
import java.util.List;
import models.Deck;
import models.Game;
import ninja.Context;
import ninja.Result;
import ninja.WrappedContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationController_ESTest extends ApplicationController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Game game0 = new Game();
      game0.dealFour();
      Result result0 = applicationController0.moveCard((Context) null, 0, 0, game0);
      assertEquals(400, Result.SC_400_BAD_REQUEST);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      // Undeclared exception!
      try { 
        applicationController0.removeCard((Context) null, 0, (Game) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("controllers.ApplicationController", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        applicationController0.removeCard((Context) null, 2229, game0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2229, Size: 4
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        applicationController0.removeCard((Context) null, (-539), game0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Result result0 = applicationController0.gameGet((Context) null, "");
      Game game0 = new Game();
      List<String> list0 = result0.supportedContentTypes();
      game0.errors = list0;
      // Undeclared exception!
      try { 
        applicationController0.moveCard((Context) null, (-1), (-1), game0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.google.common.collect.ImmutableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      WrappedContext wrappedContext0 = new WrappedContext((Context) null);
      // Undeclared exception!
      try { 
        applicationController0.moveCard(wrappedContext0, (-1), (-1), (Game) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("controllers.ApplicationController", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Game game0 = new Game("views/AcesUp/AcesUp.flt.html", (Deck) null);
      // Undeclared exception!
      try { 
        applicationController0.moveCard((Context) null, 1992, 240, game0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1992, Size: 4
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      WrappedContext wrappedContext0 = new WrappedContext((Context) null);
      // Undeclared exception!
      try { 
        applicationController0.gameGet(wrappedContext0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      WrappedContext wrappedContext0 = new WrappedContext((Context) null);
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        applicationController0.dealPost(wrappedContext0, game0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ninja.WrappedContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Result result0 = applicationController0.gameGet((Context) null, "spanish");
      assertNull(result0.getTemplate());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Result result0 = applicationController0.gameGet((Context) null, "hard");
      assertEquals(302, Result.SC_302_FOUND);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Result result0 = applicationController0.gameGet((Context) null, "normal");
      assertEquals(300, Result.SC_300_MULTIPLE_CHOICES);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        applicationController0.moveCard((Context) null, 0, 0, game0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      WrappedContext wrappedContext0 = new WrappedContext((Context) null);
      Game game0 = new Game("hard", (Deck) null);
      Result result0 = applicationController0.removeCard(wrappedContext0, 1, game0);
      assertEquals("application/json", result0.getContentType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ApplicationController applicationController0 = new ApplicationController();
      Result result0 = applicationController0.index();
      WrappedContext wrappedContext0 = new WrappedContext((Context) null);
      Game game0 = new Game("hard", (Deck) null);
      List<String> list0 = result0.supportedContentTypes();
      game0.errors = list0;
      // Undeclared exception!
      try { 
        applicationController0.removeCard(wrappedContext0, 1, game0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.google.common.collect.ImmutableCollection", e);
      }
  }
}
